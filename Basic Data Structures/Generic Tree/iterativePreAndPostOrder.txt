import java.io.*;
import java.util.*;

public class Main {
  private static class Node {
    int data;
    ArrayList<Node> children = new ArrayList<>();
  }

  public static void display(Node node) {
    String str = node.data + " -> ";
    for (Node child : node.children) {
      str += child.data + ", ";
    }
    str += ".";
    System.out.println(str);

    for (Node child : node.children) {
      display(child);
    }
  }

  public static Node construct(int[] arr) {
    Node root = null;

    Stack<Node> st = new Stack<>();
    for (int i = 0; i < arr.length; i++) {
      if (arr[i] == -1) {
        st.pop();
      } else {
        Node t = new Node();
        t.data = arr[i];

        if (st.size() > 0) {
          st.peek().children.add(t);
        } else {
          root = t;
        }

        st.push(t);
      }
    }

    return root;
  }

  public static class pair{
    Node node;
    int state;

    pair(Node node, int state){
      this.node = node;
      this.state = state;
    }
  }

  public static void IterativePreandPostOrder(Node node) {
    // write your code here
    Stack<pair> stk = new Stack<>();

    pair rootPair = new pair(node, -1);
    stk.push(rootPair);

    ArrayList<Integer> preOrder = new ArrayList<>();
    ArrayList<Integer> postOrder = new ArrayList<>();

    while(stk.size() > 0){
      pair parent = stk.peek();
      if(parent.state == -1){
        preOrder.add(parent.node.data);
        parent.state++;
      }else if(parent.state == parent.node.children.size()){
        postOrder.add(parent.node.data);
        stk.pop();
      }
      else{
        pair child = new pair(parent.node.children.get(parent.state), -1);
        stk.push(child);
        parent.state++;
      }
    }

    for(Integer i : preOrder){
      System.out.print(i +" ");
    }
    System.out.println();
    for(Integer i : postOrder){
      System.out.print(i +" ");
    }
  }

  public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    int n = Integer.parseInt(br.readLine());
    int[] arr = new int[n];
    String[] values = br.readLine().split(" ");
    for (int i = 0; i < n; i++) {
      arr[i] = Integer.parseInt(values[i]);
    }

    Node root = construct(arr);
    IterativePreandPostOrder(root);
  }

}