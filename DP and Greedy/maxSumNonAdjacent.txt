-----------------------------------------------------------------recursive---------------------------------------------------------------------------------

import java.io.*;
import java.util.*;
public class Main {
    public static int rec(int n, int idx, int[] arr){
        if(idx == n || idx == n+1){
            return 0;
        }
        int inc = arr[idx] + rec(n, idx+2, arr);
        int exc = rec(n, idx+1, arr);
        return Math.max(inc, exc);
    }
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i = 0; i< n; ++i){
            arr[i] = sc.nextInt();
        }
        int ans = rec(n, 0, arr);
        System.out.println(ans);
    }
}


--------------------------------------------------------------Memorization-------------------------------------------------------------------------------

import java.io.*;
import java.util.*;
public class Main {
    public static int rec(int n, int idx, int[] arr, int[] dp){
        if(idx == n || idx == n+1){
            return dp[idx] = 0;
        }
        if(dp[idx] != 0){
            return dp[idx];
        }
        int inc = arr[idx] + rec(n, idx+2, arr, dp);
        int exc = rec(n, idx+1, arr, dp);
        return Math.max(inc, exc);
    }
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i = 0; i< n; ++i){
            arr[i] = sc.nextInt();
        }
        int[] dp = new int[n+2];
        int ans = rec(n, 0, arr, dp);
        System.out.println(ans);
    }
}


---------------------------------------------------------------------Tabulation-------------------------------------------------------------------------


import java.io.*;
import java.util.*;
public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i = 0; i< n; ++i){
            arr[i] = sc.nextInt();
        }
        int[] dp = new int[n+2];
        for(int idx = n+1; idx>=0; --idx){
            if(idx == n || idx == n+1){
                dp[idx] = 0;
                continue;
            }
            int inc = arr[idx] + dp[idx+2];
            int exc = dp[idx+1];
            dp[idx] =  Math.max(inc, exc);
        }
        System.out.println(dp[0]);
    }
}